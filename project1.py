# -*- coding: utf-8 -*-
"""Project1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AMrPDHqhu_TxHUu2i8v7F899UOnvnYFy

Project-1st
Netflix Data: Cleaning, Analysis and Visualization
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#Load the dataset
data=pd.read_csv('/content/netflix1.csv')

#read the data
print(data)

#display rows of the dataset
data.index

#display columns
data.columns

#display dimensions
data.shape

#display basic information
data.info()

#clean the dataset
#checking null values
print(data.isnull().sum())
print(data)

#check duplicate values if any
data.drop_duplicates(inplace=True)
print(data)

#count the number of Tv shows and Movies
count=data['type'].value_counts()
print(count)

# Assuming count contains values like:
# Movie: 3500, TV Show: 1500
count = count  # already defined somewhere in your code

plt.figure(figsize=(7, 3))

# Barplot
plt.subplot(1, 2, 1)
sns.barplot(x=count.index, y=count.values, color='pink')
plt.title("Content Type Distribution")
plt.xlabel("Type")
plt.ylabel("Count")

# Pie Chart
plt.subplot(1, 2, 2)
plt.pie(count.values,
        labels=['Movie', 'TV Show'],
        autopct='%0.1f%%',
        explode=[0.05, 0.05],
        colors=['pink', 'green'],
        startangle=90,
        textprops={'fontsize': 13},
        wedgeprops={'linewidth': 2}
        )
plt.show()

data['rating'].value_counts()

#Visual Representation of the rating of movies and TV Show
ratings=data['rating'].value_counts().reset_index().sort_values(by='count',ascending=False)
plt.figure( figsize=(9,4))
sns.histplot(data['rating'])
plt.title('Rating On Netflix')
plt.xticks(rotation=45)
plt.xlabel('Rating Types')
plt.ylabel('Count')
plt.show()

#CONVERTING Date_added column to DateTime
data['date_added']=pd.to_datetime(data['date_added'])

data.describe()

#TOP 10 COUNTRIES WITH MOST CONTENT ON NETFLIX
topten=data['country'].value_counts().reset_index().sort_values(by='count', ascending=False).head(10)
plt.bar(topten['country'],width=0.5,color='y',edgecolor='r',height=topten['count'])
plt.title("TOP 10 COUNTRIES WITH MOST CONTENT ON NETFLIX")
plt.xticks(rotation=45)
plt.xlabel("Country")
plt.ylabel("Count")
plt.show()

data['year']=data['date_added'].dt.year
data['month']=data['date_added'].dt.month
data['day']=data['date_added'].dt.day
data.describe()

#Monthly releases of Movies and TV shows on Netflix

monthly=data[data['type']=='Movie']['month'].value_counts().sort_index()

monthly1=data[data['type']=='TV Show']['month'].value_counts().sort_index()
# Corrected labels in the plot calls
plt.plot(monthly.index,monthly.values,label="Movies")
plt.plot(monthly1.index,monthly1.values,label="TV Shows")

plt.legend()
plt.title("Monthly releases of Movies and TV shows on Netflix")
plt.xlabel("Month")
plt.ylabel("Count")
plt.grid()
plt.show()

#On Yearly Basis
yearly=data[data['type']=='Movie']['year'].value_counts().sort_index()
yearly1=data[data['type']=='TV Show']['year'].value_counts().sort_index()
plt.plot(yearly.index,yearly.values, label='Movies',color='blue')
plt.plot(yearly1.index,yearly1.values, label='TV Shows',color='yellow')
plt.xlabel("Years")
plt.ylabel("Frequency of releases")
plt.grid(True)
plt.suptitle("Yearly releases of Movies and TV Shows on Netflix")
plt.legend()

#TOP 10 GENRES
popular_movie_genre=data[data['type']=='Movie'].groupby("listed_in").size().sort_values(ascending=False)[:10]
popular_series_genre=data[data['type']=='TV Show'].groupby("listed_in").size().sort_values(ascending=False)[:10]
plt.bar(popular_movie_genre.index, popular_movie_genre.values, color='green')
plt.xticks(rotation=45, ha='right')
plt.xlabel("Genres")
plt.ylabel("Movies Frequency")
plt.suptitle("Top 10 popular genres for movies on Netflix")
plt.show()

#TOP DIRECTIORS WITH HIGH COUNT OF MOVIES AND SHOWS
directors=data['director'].value_counts().reset_index().sort_values(by='count', ascending=False)[1:15]
plt.bar(directors['director'], directors['count'])
plt.xticks(rotation=45, ha='right')